<!doctype html>
<html>
<head>
	<title>ILIAS Opencast Plugin Chat</title>
	<link href="/css/chat.css" rel="stylesheet">
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="/fonts/glyphicons-halflings-regular.ttf" rel="icon">
</head>
<script src="/castchat/socket.io/socket.io.js"></script>
<script src="/castchat/js/jquery.min.js"></script>
<script>
	$(function () {
		window.unread_messages = 0;
		let chat_body_current = $("#chat_body")[0];
		var width = (window.innerWidth > 0) ? window.innerWidth : screen.width;
		var mobile = (width > 290);

		var socket = io({query: {token: "<%= token %>"}});
		$('form#srchat_form').submit(function(e){
			e.preventDefault(); // prevents page reloading
			if ($('#srchat_input').val() !== '') {
				// Force scroll to end when the user types something. (self type)
				let completedCallback = function () {
					socket.emit('chat_msg', $('#srchat_input').val());
					$('#srchat_input').val('');
				};
				scrollToEnd('fast', completedCallback);
			}
			return false;
		});

		socket.on('chat_msg', function(msg){
			var scroll_is_end = mobile ?
				(chat_body_current.scrollTop == 0)
				: (chat_body_current.scrollTop + chat_body_current.offsetHeight >= chat_body_current.scrollHeight);

			var new_item = $('<li>')
				.append($('<div>').attr('class', 'srchat_profile_picture_div')
						.append($('<img>')
								.attr("class", "srchat_profile_picture")
								.attr("height", "30px")
								.attr("src", "/srchat/get_profile_picture/" + msg.usr_id)
						)).append($('<div>').attr("class", "srchat_message_div")
						.append($('<div>').attr("class", "srchat_message_top")
								.append($('<p>').attr("class", "srchat_message_name").text(msg.public_name))
								.append($('<p>').attr("class", "srchat_message_sent").text(msg.sent_at))
						)
						.append($('<p>').attr("class", "srchat_message_content").text(msg.msg))
				).hide();
			let next_item_id = getNextMessageItemId();
			new_item.attr('id', next_item_id);
			new_item.toggleClass('unread', !scroll_is_end);
			new_item.attr('data-seen', scroll_is_end);
			$('#messages').append(new_item);
			new_item.show('normal');

			if (scroll_is_end) {
				scrollToEnd();
			} else {
				window.unread_messages += 1;
				showUnreadInfo();
				let options = {
					root: document.querySelector("#chat_body"),
					rootMargin: "0px",
					threshold: 1,
				};
				let observer = new IntersectionObserver(seenObserver, options);
				observer.observe(document.getElementById(next_item_id));
			}
		});

		function seenObserver(entries, observer) {
			let disconnect = false;
			for (const entry of entries) {
				if (entry.intersectionRatio > 0.3) {
					if ($(entry.target).data('seen') === false) {
						$(entry.target).attr('data-seen', true);
						$(entry.target).toggleClass('unread', false);
						if (window.unread_messages > 0) {
							window.unread_messages -= 1;
						}
						disconnect = true;
					}
				}
			}
			if (disconnect) {
				showUnreadInfo('fast');
				observer.disconnect();
			}
		}

		socket.on('disconnect', function() {
			console.log('srchat disconnected');
			$('#srchat_retry_overlay_iframe').show();
		});

		socket.on('connect', function() {
			console.log('srchat connected');
            $('#srchat_retry_overlay_iframe').hide();
			scrollToEnd('fast');
		});

		// Send message to the top window (parent) at 500ms interval
		setInterval(function() {
			// first parameter is the message to be passed
			// second paramter is the domain of the parent
			window.top.postMessage(document.body.scrollHeight, "<%= base_url %>");
		}, 500);

		function getMessagesNum() {
			let msg_list = $('#messages').find('li');
			return msg_list.length;
		}

		function getNextMessageItemId() {
			let num = getMessagesNum();
			let id = num + 1;
			return `message-${id}`;
		}

		function scrollToEnd(speed = 'slow', completedCallback = undefined) {
			let scroll_to = mobile ? 0 : $("#chat_body")[0].scrollHeight;
			$("#chat_body").animate({scrollTop: scroll_to}, speed, completedCallback);
		}

		function showUnreadInfo(speed = 'normal') {
			let num = window.unread_messages;
			if (num > 0) {
				$("#unread_info").text(`${num} new messages`);
				$("#unread_info").show(speed);
			} else {
				$("#unread_info").hide(speed);
			}
		}
	});
</script>
<body id="srchat_body">
	<div id="srchat_title">
		<h4>Chat</h4>
	</div>
	<div id="chat_body">
		<ul id="messages">
			<% messages.forEach(function(message, index){ %>
			<li id="message-<%= (index + 1) %>" data-seen="true">
				<div class="srchat_profile_picture_div">
					<img class="srchat_profile_picture" height="30px" src="/srchat/get_profile_picture/<%= message.usr_id %>">
				</div>
				<div class="srchat_message_div">
					<div class="srchat_message_top">
						<p class="srchat_message_name"><%= message.public_name %></p>
						<p class="srchat_message_sent"><%= message.sent_at %></p>
					</div>
					<p class="srchat_message_content"><%= message.message %></p>
				</div>
			</li>
			<% }) %>
		</ul>
	</div>
	<form id="srchat_form" action="">
		<span id="unread_info"></span>
		<div class="input-group">
			<input class="form-control input-sm" id="srchat_input" maxlength="500" autocomplete="off" />
			<span class="input-group-btn">
				<button class="btn btn-warning btn-sm" id="btn-chat">
					Send
				</button>
			</span>
		</div>
	</form>
	<div id="srchat_retry_overlay_iframe" hidden>
		<span class="srchat_pseudo_element"></span>
		<img src="/images/refresh_icon.png">
	</div>
</body>
</html>
